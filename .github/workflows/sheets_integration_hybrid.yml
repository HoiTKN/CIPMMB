name: Hybrid Google Sheets + SharePoint Integration

on:
  schedule:
    # Run daily at 1 AM UTC (8 AM Vietnam time)
    - cron: '0 0 * * *'
  
  # Allow manual trigger with debug option
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'

env:
  # SharePoint Configuration
  TENANT_ID: '81060475-7e7f-4ede-8d8d-bf61f53ca528'
  CLIENT_ID: '076541aa-c734-405e-8518-ed52b67f8cbd'
  SHAREPOINT_ACCESS_TOKEN: ${{ secrets.SHAREPOINT_ACCESS_TOKEN }}
  SHAREPOINT_REFRESH_TOKEN: ${{ secrets.SHAREPOINT_REFRESH_TOKEN }}
  
  # Google Sheets Configuration
  GOOGLE_TOKEN_JSON: ${{ secrets.GOOGLE_TOKEN_JSON }}
  
  # GitHub Configuration
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  hybrid-integration:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # Required for updating GitHub secrets with refreshed tokens
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-hybrid-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-hybrid-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        echo "üì¶ Installing Python dependencies for hybrid integration..."
        python -m pip install --upgrade pip
        
        # Core dependencies
        pip install pandas openpyxl requests
        
        # SharePoint dependencies  
        pip install msal pynacl
        
        # Google Sheets dependencies
        pip install gspread google-auth google-auth-oauthlib google-auth-httplib2
        
        echo "‚úÖ All dependencies installed. Package list:"
        pip list
        
    - name: Environment validation
      run: |
        echo "üîß Validating environment variables..."
        
        # SharePoint validation
        echo "SharePoint Configuration:"
        echo "TENANT_ID: ${TENANT_ID:0:8}..."
        echo "CLIENT_ID: ${CLIENT_ID:0:8}..."
        echo "Has SHAREPOINT_ACCESS_TOKEN: $([[ -n "$SHAREPOINT_ACCESS_TOKEN" ]] && echo 'Yes' || echo 'No')"
        echo "Has SHAREPOINT_REFRESH_TOKEN: $([[ -n "$SHAREPOINT_REFRESH_TOKEN" ]] && echo 'Yes' || echo 'No')"
        
        # Google Sheets validation
        echo "Google Sheets Configuration:"
        echo "Has GOOGLE_TOKEN_JSON: $([[ -n "$GOOGLE_TOKEN_JSON" ]] && echo 'Yes' || echo 'No')"
        
        # GitHub validation
        echo "GitHub Configuration:"
        echo "Has GITHUB_TOKEN: $([[ -n "$GITHUB_TOKEN" ]] && echo 'Yes' || echo 'No')"
        
        # Check for missing critical variables
        MISSING_VARS=""
        
        if [[ -z "$SHAREPOINT_ACCESS_TOKEN" && -z "$SHAREPOINT_REFRESH_TOKEN" ]]; then
          MISSING_VARS="${MISSING_VARS} SharePoint_tokens"
        fi
        
        if [[ -z "$GOOGLE_TOKEN_JSON" ]]; then
          MISSING_VARS="${MISSING_VARS} GOOGLE_TOKEN_JSON"
        fi
        
        if [[ -n "$MISSING_VARS" ]]; then
          echo "‚ùå Missing critical environment variables:$MISSING_VARS"
          echo "üí° Please ensure all required secrets are configured in GitHub repository settings."
          exit 1
        fi
        
        echo "‚úÖ Environment validation completed successfully"

    - name: Debug environment (optional)
      if: github.event.inputs.debug_mode == 'true'
      run: |
        echo "üîç Debug mode enabled - Extended environment check"
        echo "Current working directory: $(pwd)"
        echo "Available files:"
        ls -la
        echo ""
        echo "Python version: $(python --version)"
        echo "Pip version: $(pip --version)"
        echo ""
        echo "Environment variables (truncated for security):"
        env | grep -E '^(TENANT_ID|CLIENT_ID|GITHUB_)' | head -10

    - name: Run hybrid integration
      id: integration
      run: |
        echo "üöÄ Starting Hybrid Google Sheets + SharePoint Integration..."
        echo "üìä Processing flow:"
        echo "  1. Load AQL data from SharePoint (Sample ID.xlsx)"
        echo "  2. Load KNKH data from Google Sheets"  
        echo "  3. Process and match data"
        echo "  4. Upload results to SharePoint (Data KNKH.xlsx)"
        echo ""
        
        # Run the hybrid integration script
        python sheets_integration_hybrid.py 2>&1 | tee integration_output.txt
        
        # Check exit code
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "‚ùå Hybrid integration failed (exit code: ${PIPESTATUS[0]})"
          exit 1
        fi
        
        echo "‚úÖ Hybrid integration completed successfully"

    - name: Create integration summary
      if: always()
      run: |
        echo "üìä Creating integration summary..."
        
        if [ -f integration_output.txt ]; then
          # Extract key metrics from output
          TOTAL_KNKH=$(grep -oP "KNKH data loaded: \K\d+" integration_output.txt | tail -1 || echo "N/A")
          TOTAL_AQL=$(grep -oP "AQL data loaded: \K\d+" integration_output.txt | tail -1 || echo "N/A")
          TOTAL_PROCESSED=$(grep -oP "Final dataset prepared: \K\d+" integration_output.txt | tail -1 || echo "N/A")
          QA_MATCHED=$(grep -oP "Total matched: \K\d+" integration_output.txt | tail -1 || echo "N/A")
          
          # Create summary report
          echo "## üìä Hybrid Integration Summary" > integration_summary.md
          echo "" >> integration_summary.md
          echo "- **Status**: ${{ job.status }}" >> integration_summary.md
          echo "- **KNKH Records Loaded**: $TOTAL_KNKH" >> integration_summary.md
          echo "- **AQL Records Loaded**: $TOTAL_AQL" >> integration_summary.md
          echo "- **Final Records Processed**: $TOTAL_PROCESSED" >> integration_summary.md
          echo "- **QA Matches Found**: $QA_MATCHED" >> integration_summary.md
          echo "" >> integration_summary.md
          echo "### üìÖ Processing Time" >> integration_summary.md
          echo "- **Date**: $(date -u +'%Y-%m-%d')" >> integration_summary.md
          echo "- **Time**: $(date -u +'%H:%M:%S %Z')" >> integration_summary.md
          echo "- **Vietnam Time**: $(TZ='Asia/Ho_Chi_Minh' date +'%Y-%m-%d %H:%M:%S %Z')" >> integration_summary.md
          echo "" >> integration_summary.md
          echo "### üîÑ Data Flow" >> integration_summary.md
          echo "- **Source 1**: SharePoint (Sample ID.xlsx) ‚Üí AQL Data" >> integration_summary.md
          echo "- **Source 2**: Google Sheets (MMB) ‚Üí KNKH Data" >> integration_summary.md
          echo "- **Output**: SharePoint (Data KNKH.xlsx) ‚Üí Integrated Results" >> integration_summary.md
          
          echo "‚úÖ Integration summary created"
        else
          echo "‚ö†Ô∏è No integration output found"
          echo "## ‚ùå Integration Failed" > integration_summary.md
          echo "No output file was generated during the integration process." >> integration_summary.md
        fi

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: hybrid-integration-results-${{ github.run_number }}
        path: |
          integration_output.txt
          integration_summary.md
          *.xlsx
          *.json
        if-no-files-found: ignore

    - name: Integration success notification
      if: success()
      run: |
        echo "‚úÖ Hybrid Integration completed successfully!"
        echo ""
        echo "üéØ Results:"
        if [ -f integration_summary.md ]; then
          cat integration_summary.md
        fi
        echo ""
        echo "üìç Data locations:"
        echo "  - AQL Source: SharePoint Sample ID.xlsx"
        echo "  - KNKH Source: Google Sheets MMB"
        echo "  - Output: SharePoint Data KNKH.xlsx"
        echo ""
        echo "üîÑ Next scheduled run: Tomorrow at 8:00 AM Vietnam time"

    - name: Integration failure notification
      if: failure()
      run: |
        echo "‚ùå Hybrid Integration failed!"
        echo ""
        echo "üîç Common troubleshooting steps:"
        echo "1. Check if all required secrets are configured:"
        echo "   - SHAREPOINT_ACCESS_TOKEN"
        echo "   - SHAREPOINT_REFRESH_TOKEN" 
        echo "   - GOOGLE_TOKEN_JSON"
        echo "   - GITHUB_TOKEN"
        echo ""
        echo "2. Verify SharePoint permissions for file access"
        echo "3. Verify Google Sheets API access permissions"
        echo "4. Check workflow logs and artifacts for detailed error information"
        echo ""
        echo "üìã Please review the workflow logs and artifacts for detailed error information."

    - name: Cleanup temporary files
      if: always()
      run: |
        echo "üßπ Cleaning up temporary files..."
        rm -f token.json
        rm -f *.tmp
        echo "‚úÖ Cleanup completed"

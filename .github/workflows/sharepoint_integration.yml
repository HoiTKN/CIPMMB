name: QA Data Processing - SharePoint Graph API

on:
  # Ch·∫°y h√†ng ng√†y l√∫c 8:00 AM Vietnam time (1:00 AM UTC)
  schedule:
    - cron: '0 1 * * *'
  
  # Cho ph√©p ch·∫°y th·ªß c√¥ng
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug output'
        required: false
        default: 'false'
        type: boolean

jobs:
  process-qa-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v3
    
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: üîç Verify environment
      run: |
        echo "Python version: $(python --version)"
        echo "Current directory: $(pwd)"
        echo "Files in directory: $(ls -la)"
        pip list | grep -E "(pandas|msal|requests)"
    
    - name: üè≠ Process QA data from SharePoint
      env:
        TENANT_ID: ${{ secrets.TENANT_ID }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        SHAREPOINT_SITE_URL: ${{ secrets.SHAREPOINT_SITE_URL }}
        DEBUG_MODE: ${{ github.event.inputs.debug_mode }}
      run: |
        echo "üöÄ Starting QA data processing..."
        echo "Using Tenant ID: $TENANT_ID"
        echo "Using Client ID: $CLIENT_ID"
        echo "SharePoint Site: $SHAREPOINT_SITE_URL"
        python sharepoint_graph_api.py
    
    - name: üìä Upload processed QA data
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: qa-processed-data-${{ github.run_number }}
        path: |
          output/
          *.xlsx
          *.csv
        retention-days: 30
    
    - name: üìã Create processing summary
      if: always()
      run: |
        echo "## üè≠ QA Data Processing Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Run Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow**: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
        echo "**Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "output" ]; then
          echo "### üìÅ Generated Files:" >> $GITHUB_STEP_SUMMARY
          ls -la output/ | while read line; do
            echo "- $line" >> $GITHUB_STEP_SUMMARY
          done
        else
          echo "### ‚ùå No output files generated" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó Download Results:" >> $GITHUB_STEP_SUMMARY
        echo "Check the **Artifacts** section below to download processed data." >> $GITHUB_STEP_SUMMARY
    
    - name: üö® Notify on failure
      if: failure()
      run: |
        echo "‚ùå QA Data Processing Failed!"
        echo "Check the logs above for error details."
        echo "Common issues:"
        echo "1. CLIENT_SECRET not set correctly"
        echo "2. SharePoint permissions"
        echo "3. File paths changed"
        exit 1

name: QA Data Processing with Auto Token Refresh

on:
  schedule:
    # Ch·∫°y h√†ng ng√†y l√∫c 7:00 s√°ng gi·ªù Vi·ªát Nam (00:00 UTC)
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'

env:
  TENANT_ID: '81060475-7e7f-4ede-8d8d-bf61f53ca528'
  CLIENT_ID: '076541aa-c734-405e-8518-ed52b67f8cbd'
  SHAREPOINT_ACCESS_TOKEN: ${{ secrets.SHAREPOINT_ACCESS_TOKEN }}
  SHAREPOINT_REFRESH_TOKEN: ${{ secrets.SHAREPOINT_REFRESH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  qa-data-processing:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write # C·∫ßn quy·ªÅn n√†y ƒë·ªÉ script Python c·∫≠p nh·∫≠t secrets
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        echo "üì¶ Installing Python dependencies..."
        python -m pip install --upgrade pip
        pip install pandas openpyxl requests msal pynacl
        echo "‚úÖ Dependencies installed. Listing packages:"
        pip list
        
    - name: Debug environment (optional)
      if: github.event.inputs.debug_mode == 'true'
      run: |
        echo "üîç Debug mode enabled"
        echo "Environment variables:"
        echo "TENANT_ID: ${TENANT_ID:0:8}..."
        echo "CLIENT_ID: ${CLIENT_ID:0:8}..."
        echo "Has ACCESS_TOKEN: $([[ -n "$SHAREPOINT_ACCESS_TOKEN" ]] && echo 'Yes' || echo 'No')"
        echo "Has REFRESH_TOKEN: $([[ -n "$SHAREPOINT_REFRESH_TOKEN" ]] && echo 'Yes' || echo 'No')"
        echo "Has GITHUB_TOKEN: $([[ -n "$GITHUB_TOKEN" ]] && echo 'Yes' || echo 'No')"

    - name: Run QA Data Processing
      id: process_data
      run: |
        echo "üè≠ Starting QA Data Processing with enhanced delegation flow..."
        # Run main script v√† l∆∞u output v√†o file ƒë·ªÉ ki·ªÉm tra
        python Visual_SharePoint_Delegation.py 2>&1 | tee processing_output.txt
        # Ki·ªÉm tra exit code c·ªßa script Python
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "‚ùå QA Data Processing failed (exit code: ${PIPESTATUS[0]})"
          exit 1
        fi

    - name: Create processing summary
      if: always()
      run: |
        echo "üìä Creating processing summary..."
        if [ -f processing_output.txt ]; then
          TOTAL_RECORDS=$(grep -oP "Total records: \K\d+" processing_output.txt || echo "N/A")
          DEFECT_RECORDS=$(grep -oP "Records with defects: \K\d+" processing_output.txt || echo "N/A")
          ZERO_DEFECT_RECORDS=$(grep -oP "Zero-defect records: \K\d+" processing_output.txt || echo "N/A")
          
          echo "## üìä Processing Summary" > processing_summary.md
          echo "" >> processing_summary.md
          echo "- **Status**: ${{ job.status }}" >> processing_summary.md
          echo "- **Total Records Processed**: $TOTAL_RECORDS" >> processing_summary.md
          echo "- **Records with Defects**: $DEFECT_RECORDS" >> processing_summary.md
          echo "- **Zero-Defect Records**: $ZERO_DEFECT_RECORDS" >> processing_summary.md
          echo "" >> processing_summary.md
          echo "### üìÖ Processing Time" >> processing_summary.md
          echo "- **Date**: $(date -u +'%Y-%m-%d')" >> processing_summary.md
          echo "- **Time**: $(date -u +'%H:%M:%S %Z')" >> processing_summary.md
          
          echo "‚úÖ Processing summary created"
        else
          echo "‚ö†Ô∏è No processing output found"
        fi

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: qa-processing-results-${{ github.run_number }}
        path: |
          processing_output.txt
          processing_summary.md
        if-no-files-found: ignore

    - name: Send notification on success
      if: success()
      run: |
        echo "‚úÖ QA Data Processing completed successfully!"
        if [ -f processing_summary.md ]; then
          cat processing_summary.md
        fi
        # B·∫°n c√≥ th·ªÉ t√≠ch h·ª£p g·ª≠i email/Slack t·∫°i ƒë√¢y

    - name: Send notification on failure
      if: failure()
      run: |
        echo "‚ùå QA Data Processing failed!"
        echo "Please check the workflow logs and artifacts for details."
        # B·∫°n c√≥ th·ªÉ t√≠ch h·ª£p g·ª≠i email/Slack t·∫°i ƒë√¢y
